// Smooth fade-in + dynamic asset loader
document.addEventListener("DOMContentLoaded", () => {
  // Fade-in sections
  const faders = document.querySelectorAll(".fade-in");
  const observer = new IntersectionObserver(
    entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting) entry.target.classList.add("visible");
      });
    },
    { threshold: 0.1 }
  );
  faders.forEach(fader => observer.observe(fader));

  // Footer year
  const yearSpan = document.getElementById("year");
  if (yearSpan) yearSpan.textContent = new Date().getFullYear();

  // Dynamic asset loading
  loadAsset("headshot", "img", "headshot");
  loadAsset("cv", "a", "cv-download-link", ["cv-download-link-secondary"]);
  loadAsset("video", "video", "introVideo");
});

async function loadAsset(type, elementTag, elementId, additionalIds = []) {
  try {
    const res = await fetch(`/api/get-latest?type=${type}`);
    if (!res.ok) throw new Error("Fetch failed");
    const data = await res.json();
    if (!data.url) return;

    // Main element
    const el = document.getElementById(elementId);
    if (el) {
      if (elementTag === "img") el.src = data.url;
      if (elementTag === "a") el.href = data.url;
      if (elementTag === "video") {
        const source = el.querySelector("source");
        if (source) source.src = data.url;
        el.load();
      }
    }

    // Handle duplicates (like multiple CV links)
    additionalIds.forEach(id => {
      const extraEl = document.getElementById(id);
      if (extraEl && elementTag === "a") extraEl.href = data.url;
    });
  } catch (err) {
    console.error(`Failed to load ${type}:`, err);
  }
}
